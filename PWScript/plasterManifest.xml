<?xml version="1.0" encoding="utf-8" ?>
<plasterManifest schemaVersion="1.1" templateType="Project" xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <id>d04b7ce1-0436-41d2-86f8-277132514e7e</id>
    <name>PWScript</name>
    <title>New Script project</title>
    <description>Scaffolds the files required for a PowerShell script-based project.</description>
    <version>1.0.2</version>
    <author>Meelis Nigols</author>
    <tags>Script, Build</tags>
  </metadata>

  <parameters>
    <parameter name="ScriptName" type="text" prompt="Enter the name of the script" />
    <parameter name="ScriptDesc" type="text" prompt="Enter a description of the script (required for publishing to the PowerShell Gallery)" />
    <parameter name="Version" type="text" prompt="Enter the version number of the script" default="0.0.1" />
    <parameter name="FullName" type="user-fullname" prompt="Enter your full name" store="text" />
    <parameter name="ScriptCompanyName" type="text" prompt="Company name" default="!Zum!" />
    <parameter name="License" type="choice" prompt="Select a license (see http://choosealicense.com for help choosing):" default="0" store="text">
      <choice label="&amp;None" help="No license." value="None" />
      <choice label="&amp;Apache" help="Adds an Apache license file." value="Apache" />
      <choice label="&amp;MIT" help="Adds an MIT license file." value="MIT" />
    </parameter>
    <parameter name="ScriptPsVersion" type="choice" store="text" prompt="Minimum PowerShell version" default="2">
      <choice label="&amp;2.0" help="Minimum PowerShell Version required is 2.0 (Deprecated)" value="2.0" />
      <choice label="&amp;3.0" help="Minimum PowerShell Version required is 3.0 (Legacy)" value="3.0" />
      <choice label="&amp;5.1" help="Minimum PowerShell Version required is 5.1" value="5.1" />
      <choice label="&amp;6.0" help="Minimum PowerShell Version required is 6.0 (PowerShell Core/.Net Standard 2.x Compliant)" value="6.0" />
    </parameter>

    <parameter name="Options" type="multichoice" prompt="Select one or more of the following tooling options:" default="1,2,3" store="text">
      <choice label="&amp;None" help="No tooling options specified." value="None" />
      <choice label="Add &amp;Git repository files" help="Adds file useful in Git repository." value="Git" />
      <choice label="Add &amp;Pester test support" help="Adds test directory and Pester test for the module manifest file." value="Pester" />
      <choice label="Add PSScript&amp;Analyzer support" help="Adds script analysis support using PSScriptAnalyzer." value="PSScriptAnalyzer" />
    </parameter>

    <parameter name="Editor" type="choice" prompt="Select one of the supported script editors for better editor integration (or None):" default="0" store="text">
      <choice label="&amp;None" help="No editor specified." value="None" />
      <choice label="Visual Studio &amp;Code" help="Your editor is Visual Studio Code." value="VSCode" />
    </parameter>
  </parameters>

  <content>
    <message>&#10;&#10;Scaffolding your PowerShell Script...&#10;&#10;&#10;</message>

    <templateFile source="src\Script.ps1" destination="src\${PLASTER_PARAM_ScriptName}.ps1" openInEditor="true" />
    <file source="CHANGELOG.md" destination="" />


    <file condition="$PLASTER_PARAM_Options -contains 'Git'" source=".gitignore" destination="" />
    <templateFile condition="$PLASTER_PARAM_Options -contains 'Git'" source="README.md" destination="" />


    <message> Setting license for: $PLASTER_PARAM_ScriptName </message>
    <templateFile condition="$PLASTER_PARAM_License -eq 'Apache'" source="license\Apache.txt" destination="LICENSE" encoding="UTF8-NoBOM" />
    <templateFile condition="$PLASTER_PARAM_License -eq 'MIT'" source="license\MIT.txt" destination="LICENSE" encoding="UTF8-NoBOM" />

    <message> Setting editor workspace settings for: $PLASTER_PARAM_Editor </message>
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_Options -contains 'Pester')" source="editor\VSCode\tasks.json" destination=".vscode\tasks.json" />
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_Options -notcontains 'PSScriptAnalyzer')" source="editor\VSCode\settings.json" destination=".vscode\settings.json" />
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode')" source="editor\VSCode\extensions.json" destination=".vscode\extensions.json" />
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode')" source="editor\VSCode\launch.json" destination=".vscode\launch.json" />
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode')" source="editor\.editorconfig" destination=".editorconfig" />
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode')" source="editor\.markdownlint.json" destination=".markdownlint.json" />

    <message condition="$PLASTER_PARAM_Options -contains 'PSScriptAnalyzer'"> Setting PS Script Analyzer settings for: $PLASTER_PARAM_Editor </message>
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_Options -contains 'PSScriptAnalyzer')" source="editor\VSCode\settings-analyzer.json" destination=".vscode\settings.json" />
    <file condition="$PLASTER_PARAM_Options -contains 'PSScriptAnalyzer'" source="PSScriptAnalyzerSettings.psd1" destination="" />

    <message> Checking for required modules </message>
    <requireModule name="Pester" condition="$PLASTER_PARAM_Options -contains 'Pester'" minimumVersion="3.4.0" message="Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 3.4.0, VS Code will not display Pester warnings and errors in the Problems panel." />
    <requireModule name="PSScriptAnalyzer" condition="$PLASTER_PARAM_Options -contains 'PSScriptAnalyzer'" message="Without PSScriptAnalyzer, you will not be able to perform script analysis, or use the provided options to control script analysis." />

    <message>

Your new PowerShell module project '$PLASTER_PARAM_ScriptName' has been created.

        </message>

    <message condition="$PLASTER_PARAM_Options -contains 'Pester'">
A Pester test has been created to validate the module's manifest file.  Add additional tests to the test directory.
You can run the Pester tests in your project by executing the 'test' task.  Press Ctrl+P, then type 'task test'.

        </message>

  </content>
</plasterManifest>